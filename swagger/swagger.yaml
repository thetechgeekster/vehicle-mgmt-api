openapi: 3.0.0
info:
  version: 1.0.0
  title: TWENTY3 Vehicle Management API
  description: An API to manage vehicles, services, fixes, and enhancements for users.
servers:
  - url: http://localhost:3000
    description: Local server
paths:
  /users:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                settings:
                  type: array
                  items:
                    type: string
              required:
                - username
                - email
                - password
                - settings
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /login:
    post:
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
        '400':
          description: Invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /users/{userId}/vehicles:
    get:
      summary: Get all vehicles for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of vehicles
          content:
            application/json:
              schema:
                type: object
                properties:
                  vehicles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        user_id:
                          type: integer
                        vin:
                          type: string
                        make:
                          type: string
                        model:
                          type: string
                        date_of_manufacture:
                          type: string
                          format: date
                        date_of_purchase:
                          type: string
                          format: date
                        mileage_on_purchase:
                          type: integer
        '400':
          description: Error retrieving vehicles
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /vehicles:
    post:
      summary: Add a new vehicle
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                vin:
                  type: string
                make:
                  type: string
                model:
                  type: string
                date_of_manufacture:
                  type: string
                  format: date
                date_of_purchase:
                  type: string
                  format: date
                mileage_on_purchase:
                  type: integer
                photo:
                  type: string
                  format: binary
              required:
                - userId
                - vin
                - make
                - model
                - date_of_manufacture
                - date_of_purchase
                - mileage_on_purchase
      responses:
        '201':
          description: Vehicle added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '400':
          description: Error adding vehicle
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /vehicles/{vehicleId}/services:
    post:
      summary: Add a service record
      parameters:
        - name: vehicleId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date_of_service:
                  type: string
                  format: date
                procedures:
                  type: string
                cost:
                  type: number
                  format: float
              required:
                - date_of_service
                - procedures
                - cost
      responses:
        '201':
          description: Service record added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '400':
          description: Error adding service record
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /vehicles/{vehicleId}/fixes:
    post:
      summary: Add a fix record
      parameters:
        - name: vehicleId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date_of_fix:
                  type: string
                  format: date
                procedures:
                  type: string
                cost:
                  type: number
                  format: float
              required:
                - date_of_fix
                - procedures
                - cost
      responses:
        '201':
          description: Fix record added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '400':
          description: Error adding fix record
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /vehicles/{vehicleId}/enhancements:
    post:
      summary: Add an enhancement record
      parameters:
        - name: vehicleId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date_of_procedure:
                  type: string
                  format: date
                procedures:
                  type: string
                cost:
                  type: number
                  format: float
              required:
                - date_of_procedure
                - procedures
                - cost
      responses:
        '201':
          description: Enhancement record added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
        '400':
          description: Error adding enhancement record
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /users/{userId}/records:
    get:
      summary: Get all records (services, fixes, enhancements) for a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of all records
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        id:
                          type: integer
                        vehicle_id:
                          type: integer
                        date:
                          type: string
                          format: date
                        procedures:
                          type: string
                        cost:
                          type: number
                          format: float
                        document_index:
                          type: integer
        '400':
          description: Error retrieving records
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /services/{serviceId}:
    put:
      summary: Edit a service record
      parameters:
        - name: serviceId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date_of_service:
                  type: string
                  format: date
                procedures:
                  type: string
                cost:
                  type: number
                  format: float
                document_index:
                  type: integer
              required:
                - date_of_service
                - procedures
                - cost
                - document_index
      responses:
        '200':
          description: Service updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Error updating service
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /fixes/{fixId}:
    put:
      summary: Edit a fix record
      parameters:
        - name: fixId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
